#!/usr/bin/env -S python3 -m dg
import "/nmigen_dg/*"
import "/nmigen/cli/main"


UARTReceiver = subclass Elaboratable where
    __init__ = divisor ~> None where
        @divisor = divisor

        @i    = Signal!
        @data = Signal 8
        @rdy  = Signal!
        @ack  = Signal!
        @err  = Signal!

    elaborate = platform ~> m where with m = Module! =>

        ctr = Signal$ range @divisor
        stb = Signal!
        When
            ctr == 0 ,->
                Sync$ ctr :== @divisor - 1
                Comb$ stb :== 1
            otherwise ,->
                Sync$ ctr :== ctr - 1

        bit = Signal 3
        fsm = FSM
            START ->
                When ~ @i $ ->
                    START |>. DATA
                    Sync
                        ctr :== @divisor // 2
                        bit :== 7

            DATA ->
                When stb $ ->
                    Sync
                        bit   :== bit - 1
                        @data :== Cat @i @data

                    When (bit == 0) $ ->
                        DATA |>. STOP
            STOP ->
                When stb $ ->
                    When
                        @i ,->
                            STOP |>. DONE
                        otherwise ,->
                            STOP |>. ERROR
            DONE ->
                Comb$ @rdy :== 1
                When @ack $ ->
                    DONE |>. START

            ERROR ->
                None
        Comb$ @err :== fsm.ongoing "ERROR"




if __name__ == "__main__" =>
    rx = UARTReceiver 20
    main rx ports: [rx.i, rx.data, rx.rdy, rx.ack, rx.err]
